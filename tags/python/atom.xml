<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>/tags/python/</id>
  <title>The Butler - python</title>
  <subtitle><![CDATA[A ready to use static blog, powered by Cecil.]]></subtitle>
  <link href="/tags/python/atom.xml" rel="self" type="application/atom+xml" />
  <link href="/tags/python/" rel="alternate" type="text/html" />
  <updated>2021-03-25T00:30:04+01:00</updated>
  <author>
    <name>The Butler</name>
    <uri>/</uri>
  </author>
  <entry xml:lang="en">
    <id>/blog/sending-slack-messages-in-python/</id>
    <title>Sending Slack Messages in Python</title>
    <content type="html">
      <![CDATA[<p>In this post I will demonstrate how to send messages to slack using python based on the status of an event. </p>
<p>We will keep it basic, that when something is down or up, it should send a slack message with the status, message, color and embed your grafana dashboard links inside the alert (or any links that you would like).</p>
<h2>Create a Webhook</h2>
<p>From a previous post on <a href="https://blog.ruanbekker.com/blog/2019/04/18/setup-a-slack-webhook-for-sending-messages-from-applications/">how to use curl to send slack messages</a> I showed how to create your webhook, so you can just follow that post if you want to follow along.</p>
<p>Once you have a webhook, which will look like <code>https://hooks.slack.com/services/xx/yy/zz</code>, you are good to follow to the next step.</p>
<h2>Creating the Script</h2>
<p>First we need requests:</p>
<pre><code>$ pip install requests</code></pre>
<p>Then we will create the <code>slack_notifier.py</code>, just ensure that you replace your slack webhook url and slack channel to yours:</p>
<pre><code class="language-python">import requests
import sys
import os

SLACK_WEBHOOK_URL = 'https://hooks.slack.com/&lt;your&gt;/&lt;slack&gt;/&lt;webhook&gt;'
SLACK_CHANNEL = "#your-slack-channel"
ALERT_STATE = sys.argv[1]

alert_map = {
    "emoji": {
        "up": ":white_check_mark:",
        "down": ":fire:"
    },
    "text": {
        "up": "RESOLVED",
        "down": "FIRING"
    },
    "message": {
        "up": "Everything is good!",
        "down": "Stuff is burning!"
    },
    "color": {
        "up": "#32a852",
        "down": "#ad1721"
    }
}

def alert_to_slack(status, log_url, metric_url):
    data = {
        "text": "AlertManager",
        "username": "Notifications",
        "channel": SLACK_CHANNEL,
        "attachments": [
        {
            "text": "{emoji} [*{state}*] Status Checker\n {message}".format(
                emoji=alert_map["emoji"][status],
                state=alert_map["text"][status],
                message=alert_map["message"][status]
            ),
            "color": alert_map["color"][status],
            "attachment_type": "default",
            "actions": [
                {
                    "name": "Logs",
                    "text": "Logs",
                    "type": "button",
                    "style": "primary",
                    "url": log_url
                },
                {
                    "name": "Metrics",
                    "text": "Metrics",
                    "type": "button",
                    "style": "primary",
                    "url": metric_url
                }
            ]
        }]
    }
    r = requests.post(SLACK_WEBHOOK_URL, json=data)
    return r.status_code

alert_to_slack(ALERT_STATE, "https://grafana-logs.dashboard.local", "https://grafana-metrics.dashboard.local")</code></pre>
<h2>Testing it out</h2>
<p>Time to test it out, so let's assume something is down, then we can react on that event and action the following:</p>
<pre><code>$ python slack_notifier.py down</code></pre>
<p>Which will look like the following on slack:</p>
<p><img src="https://user-images.githubusercontent.com/567298/98374881-fdf00880-2049-11eb-9d7f-7599665871db.png" alt="image" width="461" loading="lazy" /></p>
<p>And when recovery is in place, we can action the following:</p>
<pre><code>$ python slack_notifier.py up</code></pre>
<p>Which will look like this:</p>
<p><img src="https://user-images.githubusercontent.com/567298/98374958-1eb85e00-204a-11eb-8ab0-c6a8a0640752.png" alt="image" width="471" loading="lazy" /></p>
<h2>Thanks</h2>
<p>That was a basic example on how you can use python to send slack messages.</p>]]>
    </content>
    <link href="/blog/sending-slack-messages-in-python/" rel="alternate" type="text/html" />
    <published>2021-03-25T00:30:04+01:00</published>
    <updated>2021-03-25T00:30:04+01:00</updated>
  </entry>
</feed>
